// @dart=2.12
part of launchdarkly_flutter_client_sdk;

class LDContextAttributes {
  final String kind;
  final String? key;
  final String? name;
  final bool anonymous;
  final Map<String, LDValue> custom;
  final List<String> privateAttributeNames;

  LDContextAttributes._internal(this.kind, this.key, this.name, this.anonymous,
      this.custom, this.privateAttributeNames);
}

/// A builder for constructing [LDUser] objects.
class _ContextAttributesBuilder {
  static const String _NAME = "name";

  // This may seem counter intuitive that kind is required, but key is not.  The
  // kind is required because it is simpler to always require it than to sometimes
  // allow it to be omitted (in the single context case).  Like when you're in
  // the grocery store and you have too many choices.  As for keys, keys can be
  // autogenerated if absent
  String _kind;
  String? _key;
  String? _name;
  bool _anonymous = false;

  // TODO: investigate if it is more efficient to start with static empty
  // representation then change to non-empty.
  Map<String, LDValue> _custom = new Map();
  // TODO: investigate if it is more efficient to start with static empty
  // representation then change to non-empty.
  Set<String> _privateAttributeNames = new Set();

  _ContextAttributesBuilder._internal(String kind, [String? key]) :
    _kind = kind,
    _key = key;

  _ContextAttributesBuilder anonymous(bool anonymous) {
    _anonymous = anonymous;
    return this;
  }

  _ContextAttributesBuilder name(String name) {
    _name = name;
    return this;
  }

  _ContextAttributesBuilder privateName(String name) {
    _privateAttributeNames.add(_NAME);
    _name = name;
    return this;
  }

  _ContextAttributesBuilder custom(String name, LDValue value) {
    _custom[name] = value;
    return this;
  }

  // TODO sc-195759: Support private and redacted attributes.  Rewrite custom
  // and private APIs to match other contemporary SDK versions
  /// Adds a new custom attribute to the user, marking it as private.
  _ContextAttributesBuilder privateCustom(String name, LDValue value) {
    _privateAttributeNames.add(name);
    _custom[name] = value;
    return this;
  }

  // TODO sc-195759: Support attribute references

  /// Constructs an [LDUser] instance from the values currently in the builder.
  LDContextAttributes _build() {
    return LDContextAttributes._internal(
        _kind,
        _key,
        _name,
        _anonymous,
        Map.unmodifiable(_custom),
        List.unmodifiable(_privateAttributeNames),
    );
  }
}